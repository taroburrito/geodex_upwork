webpackHotUpdate(0,{

/***/ 391:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(3), RootInstanceProvider = __webpack_require__(11), ReactMount = __webpack_require__(13), React = __webpack_require__(67); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {\n\n/* REACT HOT LOADER */\"use strict\";\n\nif (true) {\n\t(function () {\n\t\tvar ReactHotAPI = __webpack_require__(3),\n\t\t    RootInstanceProvider = __webpack_require__(11),\n\t\t    ReactMount = __webpack_require__(13),\n\t\t    React = __webpack_require__(67);module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () {\n\t\t\treturn RootInstanceProvider.getRootInstances(ReactMount);\n\t\t}, React);\n\t})();\n}try {\n\t(function () {\n\n\t\t/*\n   * action types\n   */\n\t\t'use strict';\n\n\t\tObject.defineProperty(exports, '__esModule', {\n\t\t\tvalue: true\n\t\t});\n\t\texports.startFetchingUserProfile = startFetchingUserProfile;\n\t\texports.fetchUserProfile = fetchUserProfile;\n\t\texports.fetchUserProfileSuccess = fetchUserProfileSuccess;\n\t\texports.fetchUserProfileFail = fetchUserProfileFail;\n\t\texports.reloadingProfilePage = reloadingProfilePage;\n\t\texports.getUserDetails = getUserDetails;\n\t\texports.updateProfileInput = updateProfileInput;\n\t\texports.updatedProfileData = updatedProfileData;\n\t\texports.updateUserProfileData = updateUserProfileData;\n\n\t\tvar _PageActions = __webpack_require__(392);\n\n\t\t/*\n      * other constants\n      */\n\n\t\t/*\n   * action creators\n   */\n\n\t\tvar Start_Fetching_User_Profile = 'Start_Fetching_User_Profile';\n\t\texports.Start_Fetching_User_Profile = Start_Fetching_User_Profile;\n\t\tvar Fetch_User_Profile_Success = 'Fetch_User_Profile_Success';\n\t\texports.Fetch_User_Profile_Success = Fetch_User_Profile_Success;\n\t\tvar Fetch_User_Profile_Fail = 'Fetch_User_Profile_Fail';\n\t\texports.Fetch_User_Profile_Fail = Fetch_User_Profile_Fail;\n\t\tvar Reload_Profile_Page = 'Reload_Profile_Page';\n\t\texports.Reload_Profile_Page = Reload_Profile_Page;\n\t\tvar Get_User_Details = 'Get_User_Deails';\n\t\texports.Get_User_Details = Get_User_Details;\n\t\tvar Update_Profile_Input = 'Update_Profile_Input';\n\t\texports.Update_Profile_Input = Update_Profile_Input;\n\t\tvar Update_Profile_Success = 'Update_Profile_Success';\n\t\texports.Update_Profile_Success = Update_Profile_Success;\n\n\t\tfunction startFetchingUserProfile() {\n\t\t\treturn { type: Start_Fetching_User_Profile };\n\t\t}\n\n\t\tfunction fetchUserProfile(userId) {\n\n\t\t\treturn function (dispatch) {\n\t\t\t\tdispatch(startFetchingUserProfile());\n\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\turl: '/api/v1/users/' + userId }).done(function (data) {\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tdispatch(fetchUserProfileFail(data.error));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch(fetchUserProfileSuccess(data.userData));\n\t\t\t\t\t}\n\t\t\t\t}).fail(function (a, b, c, d) {\n\t\t\t\t\tconsole.log(\"GET '/api/v1/users/' has actual failure: \", a, b, c, d);\n\t\t\t\t\tdispatch(fetchUserProfileFail()); //TODO figure out what to pass\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tfunction fetchUserProfileSuccess(userData) {\n\t\t\treturn { type: Fetch_User_Profile_Success, userData: userData };\n\t\t}\n\n\t\tfunction fetchUserProfileFail(error) {\n\t\t\treturn { type: Fetch_User_Profile_Fail, error: error };\n\t\t}\n\n\t\t/*export function handleSuccessMessage(msg){\n  \treturn{type: Handle_Success_Message, msg: msg}\n  }*/\n\n\t\tfunction reloadingProfilePage() {\n\t\t\treturn { type: Reload_Profile_Page };\n\t\t}\n\n\t\tfunction getUserDetails(userdetail) {\n\t\t\treturn { type: Get_User_Details, userdetail: userdetail };\n\t\t}\n\n\t\tfunction updateProfileInput(field, val) {\n\t\t\treturn { type: Update_Profile_Input, field: field, value: val };\n\t\t}\n\n\t\tfunction updatedProfileData(data) {\n\t\t\treturn { type: Update_Profile_Success, data: data };\n\t\t}\n\n\t\tfunction updateUserProfileData(userData) {\n\t\t\treturn function (dispatch) {\n\t\t\t\t$.ajax({\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: '/api/v1/user/update/' + userData.id,\n\t\t\t\t\tdata: userData,\n\t\t\t\t\tprocessData: false,\n\t\t\t\t\tcontentType: false\n\t\t\t\t}).done(function (data) {\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tconsole.log(\"Error in Updating data\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(\"Successfully Updated\");\n\t\t\t\t\t\tdispatch(updatedProfileData(data));\n\t\t\t\t\t\t//dispatch(handleSuccessMessage(\"Added Successfully\"));\n\t\t\t\t\t}\n\t\t\t\t}).error(function (error) {\n\t\t\t\t\tconsole.log(\"Error in get all pages api call\" + JSON.stringify(error));\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\t/* REACT HOT LOADER */\n\t}).call(undefined);\n} finally {\n\tif (true) {\n\t\t(function () {\n\t\t\tvar foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false;if (module.exports && module.makeHot) {\n\t\t\t\tvar makeExportsHot = __webpack_require__(385);if (makeExportsHot(module, __webpack_require__(67))) {\n\t\t\t\t\tfoundReactClasses = true;\n\t\t\t\t}var shouldAcceptModule = true && foundReactClasses;if (shouldAcceptModule) {\n\t\t\t\t\tmodule.hot.accept(function (err) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tconsole.error(\"Cannot not apply hot update to \" + \"ProfileActions.js\" + \": \" + err.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}module.hot.dispose(function (data) {\n\t\t\t\tdata.makeHot = module.makeHot;data.foundReactClasses = foundReactClasses;\n\t\t\t});\n\t\t})();\n\t}\n}\n\n/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(385); if (makeExportsHot(module, __webpack_require__(67))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error(\"Cannot not apply hot update to \" + \"ProfileActions.js\" + \": \" + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./actions/ProfileActions.js\n// module id = 391\n// module chunks = 0\n//# sourceURL=webpack:///./actions/ProfileActions.js?");

/***/ }

})